# Russian translations for PACKAGE package
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-09-04 11:19+0500\n"
"PO-Revision-Date: 2025-09-04 11:19+0500\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#. type: Title #
#: en/runtime/sessions.md
#, fuzzy, no-wrap
#| msgid "Yii versions"
msgid "Sessions"
msgstr "Версии Yii"

#. type: Plain text
#: en/runtime/sessions.md
msgid "Sessions persist data between requests without passing them to the client and back.  Yii has [a session package](https://github.com/yiisoft/session) to work with session data."
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "To add it to your application, use composer:"
msgstr ""

#. type: Fenced code block (shell)
#: en/runtime/sessions.md
#, fuzzy, no-wrap
#| msgid "composer install yiisoft/security\n"
msgid "composer require yiisoft/session\n"
msgstr "composer install yiisoft/security\n"

#. type: Title ##
#: en/runtime/sessions.md
#, no-wrap
msgid "Configuring middleware"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "To keep a session between requests, you need to add `SessionMiddleware` to your route group or application middlewares.  You should prefer a route group when you have both API with token-based authentication and regular web routes in the same application. Having it this way avoids starting the session for API endpoints."
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "To add a session for a certain group of routes, edit `config/routes.php` like the following:"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"<?php\n"
"\n"
"declare(strict_types=1);\n"
"\n"
"use Yiisoft\\Router\\Group;\n"
"use Yiisoft\\Session\\SessionMiddleware;\n"
"\n"
"return [\n"
"    Group::create('/blog')\n"
"        ->middleware(SessionMiddleware::class)\n"
"        ->routes(\n"
"            // ...\n"
"        )\n"
"];\n"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "To add a session to the whole application, edit `config/application.php` like the following:"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"return [\n"
"    Yiisoft\\Yii\\Web\\Application::class => [\n"
"        '__construct()' => [\n"
"            'dispatcher' => DynamicReference::to(static function (Injector $injector) {\n"
"                return ($injector->make(MiddlewareDispatcher::class))\n"
"                    ->withMiddlewares(\n"
"                        [\n"
"                            Router::class,\n"
"                            CsrfMiddleware::class,\n"
"                            SessionMiddleware::class, // <-- add this\n"
"                            ErrorCatcher::class,\n"
"                        ]\n"
"                    );\n"
"            }),\n"
"        ],\n"
"    ],\n"
"];\n"
msgstr ""

#. type: Title ##
#: en/runtime/sessions.md
#, no-wrap
msgid "Opening and closing session"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"public function actionProfile(\\Yiisoft\\Session\\SessionInterface $session)\n"
"{\n"
"    // start a session if it's not yet started\n"
"    $session->open();\n"
"\n"
"    // work with session\n"
"\n"
"    // write session values and then close it\n"
"    $session->close();\n"
"}\n"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"> [!NOTE]\n"
"> Closing session as early as possible is a good practice since many session implementations are blocking other\n"
"> requests while the session is open.\n"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "There are two more ways to close a session:"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"public function actionProfile(\\Yiisoft\\Session\\SessionInterface $session)\n"
"{\n"
"    // discard changes and close the session\n"
"    $session->discard();\n"
"\n"
"    // destroy the session completely\n"
"    $session->destroy();    \n"
"}\n"
msgstr ""

#. type: Title ##
#: en/runtime/sessions.md
#, no-wrap
msgid "Working with session data"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "Usually you will use the following methods to work with session data:"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"public function actionProfile(\\Yiisoft\\Session\\SessionInterface $session)\n"
"{\n"
"    // get a value\n"
"    $lastAccessTime = $session->get('lastAccessTime');\n"
"\n"
"    // get all values\n"
"    $sessionData = $session->all();\n"
"        \n"
"    // set a value\n"
"    $session->set('lastAccessTime', time());\n"
"\n"
"    // check if the value exists\n"
"    if ($session->has('lastAccessTime')) {\n"
"        // ...    \n"
"    }\n"
"    \n"
"    // remove value\n"
"    $session->remove('lastAccessTime');\n"
"\n"
"    // get value and then remove it\n"
"    $sessionData = $session->pull('lastAccessTime');\n"
"\n"
"    // clear session data from runtime\n"
"    $session->clear();\n"
"}\n"
msgstr ""

#. type: Title ##
#: en/runtime/sessions.md
#, no-wrap
msgid "Flash messages"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "In case you need some data to remain in session until read, such as in case of displaying a message on the next page, \"flash\" messages are what you need.  A flash message is a special type of data that's available only in the current request and the next request.  After that, it will be deleted automatically."
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
#, fuzzy
#| msgid "That's equal to the following:"
msgid "`FlashInteface` usage is the following:"
msgstr "Это соответствует:"

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"/** @var Yiisoft\\Session\\Flash\\FlashInterface $flash */\n"
"\n"
"// request 1\n"
"$flash->set('warning', 'Oh no, not again.');\n"
"\n"
"// request 2\n"
"$warning = $flash->get('warning');\n"
"if ($warning !== null) {\n"
"    // do something with it\n"
"}\n"
msgstr ""

#. type: Title ##
#: en/runtime/sessions.md
#, no-wrap
msgid "Custom session storage"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "When using `Yiisoft\\Session\\Session`, you can use your own storage implementation:"
msgstr ""

#. type: Fenced code block (php)
#: en/runtime/sessions.md
#, no-wrap
msgid ""
"$handler = new MySessionHandler();\n"
"$session = new \\Yiisoft\\Session\\Session([], $handler);\n"
msgstr ""

#. type: Plain text
#: en/runtime/sessions.md
msgid "Custom storage must implement `\\SessionHandlerInterface`."
msgstr ""
