# Russian translations for PACKAGE package
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-09-11 10:15+0500\n"
"PO-Revision-Date: 2025-09-04 11:19+0500\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#. type: Title #
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Data caching"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Data caching is about storing some PHP variables in a cache and retrieving them later from the cache.  It's also the foundation for more advanced caching features, such as [page caching](page.md)."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "To use cache, install [yiisoft/cache](https://github.com/yiisoft/cache) package:"
msgstr ""

#. type: Fenced code block (shell)
#: ../../guide/en/caching/data.md
#, fuzzy, no-wrap
#| msgid "composer install yiisoft/security\n"
msgid "composer require yiisoft/cache\n"
msgstr "composer install yiisoft/security\n"

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "The following code is a typical usage pattern of data caching, where `$cache` refers to a `Cache` instance from the package:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"public function getTopProducts(\\Yiisoft\\Cache\\CacheInterface $cache): array\n"
"{\n"
"    $key = ['top-products', $count = 10];\n"
"    \n"
"    // Try retrieving $data from cache.\n"
"    $data = $cache->getOrSet($key, function (\\Psr\\SimpleCache\\CacheInterface $cache) use ($count) {\n"
"        // Can't find $data in a cache, calculate it from scratch.\n"
"        return getTopProductsFromDatabase($count);\n"
"    }, 3600);\n"
"    \n"
"    return $data;\n"
"}\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "When cache has data associated with the `$key`, it returns the cached value.  Otherwise, it executes the passed anonymous function to calculate the value to cache and return."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "If the anonymous function requires some data from the outer scope, you can pass it with the `use` statement."
msgstr ""

#. type: Title ##
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Cache handlers"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "The cache service uses [PSR-16](https://www.php-fig.org/psr/psr-16/) compatible cache handlers which represent various cache storages, such as memory, files, and databases."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Yii provides the following handlers:"
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`NullCache` — a cache placeholder which does no real caching. The purpose of this handler is to simplify the code that needs to check the availability of cache. For example, during development or if the server doesn't have actual cache support, you may configure a cache service to use this handler.  When you enable actual cache support, you can switch to using the corresponding cache handler.  In both cases, you may use the same code without extra checks."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`ArrayCache` — provides caching for the current request only by storing the values in an array."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "[APCu](https://github.com/yiisoft/cache-apcu) - uses a PHP [APC](https://secure.php.net/manual/en/book.apc.php) extension.  You can consider this option as the fastest one when dealing with cache for a centralized thick application (e.g., one server, no dedicated load balancers, etc.)."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "[Database](https://github.com/yiisoft/cache-db) — uses a database table to store cached data."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "[File](https://github.com/yiisoft/cache-file) — uses standard files to store cached data. This is particularly suitable to cache large chunks of data, such as page content."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "[Memcached](https://github.com/yiisoft/cache-memcached) — uses a PHP [memcached](https://secure.php.net/manual/en/book.memcached.php)  extension. You can consider this option as the fastest one when dealing with cache in a distributed application"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"  (e.g., with several servers, load balancers, etc.)\n"
"- [Wincache](https://github.com/yiisoft/cache-wincache) — uses PHP [WinCache](https://iis.net/downloads/microsoft/wincache-extension)\n"
"  ([see also](https://secure.php.net/manual/en/book.wincache.php)) extension.\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "[You could find more handlers at packagist.org](https://packagist.org/providers/psr/simple-cache-implementation)."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"> [!TIP]\n"
"> You may use different cache storage in the same application. A common strategy is:\n"
"> - To use memory-based cache storage to store small but constantly used data (e.g., statistics)\n"
"> - To use file-based or database-based cache storage to store big and less often used data (e.g., page content)\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Cache handlers are usually set up in a [dependency injection container](../concept/di-container.md) so that they can be globally configurable and accessible."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Because all cache handlers support the same set of APIs, you can swap the underlying cache handler with a different one. You can do it by reconfiguring the application without modifying the code that uses the cache."
msgstr ""

#. type: Title ###
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Cache keys"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "A key uniquely identifies each data item stored in the cache. When you store a data item, you have to specify a key for it. Later, when you retrieve the data item, you should give the corresponding key."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "You may use a string or an arbitrary value as a cache key. When a key isn't a string, it will be automatically serialized into a string."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "A common strategy of defining a cache key is to include all determining factors in terms of an array."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "When different applications use the same cache storage, you should specify a unique cache key prefix for each application to avoid conflicts of cache keys.  You can do this by using `\\Yiisoft\\Cache\\PrefixedCache` decorator:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"$arrayCacheWithPrefix = new \\Yiisoft\\Cache\\PrefixedCache(new \\Yiisoft\\Cache\\ArrayCache(), 'myapp_');\n"
"$cache = new \\Yiisoft\\Cache\\Cache($arrayCacheWithPrefix);\n"
msgstr ""

#. type: Title ###
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Cache expiration"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "A data item stored in a cache will remain there forever unless it's removed because of some caching policy enforcement. For example, caching space is full and cache storage removes the oldest data.  To change this behavior, you can set a TTL parameter when calling a method to store a data item:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"$ttl = 3600;\n"
"$data = $cache->getOrSet($key, function (\\Psr\\SimpleCache\\CacheInterface $cache) use ($count) {\n"
"return getTopProductsFromDatabase($count);\n"
"}, $ttl);\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "The `$ttl` parameter indicates for how many seconds the data item can remain valid in the cache. When you retrieve the data item, if it has passed the expiration time, the method will execute the function and set the resulting value into cache."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "You may set the default TTL for the cache:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "$cache = new \\Yiisoft\\Cache\\Cache($arrayCache, 60 * 60); // 1 hour\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Additionally, you can invalidate a cache key explicitly:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "$cache->remove($key);\n"
msgstr ""

#. type: Title ###
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Invalidation dependencies"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Besides the expiration setting, changes of the so-called **invalidation dependencies** may also invalidate cached data item.  For example, `\\Yiisoft\\Cache\\Dependency\\FileDependency` represents the dependency of a file's modification time.  When this dependency changes, it means something modifying the corresponding file.  As a result, any outdated file content found in the cache should invalidate."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Cache dependencies are objects of `\\Yiisoft\\Cache\\Dependency\\Dependency` descendant classes. When you store a data item in the cache, you can pass along an associated cache dependency object. For example,"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"/**\n"
" * @var callable $callable\n"
" * @var \\Yiisoft\\Cache\\CacheInterface $cache\n"
" */\n"
"\n"
"use Yiisoft\\Cache\\Dependency\\TagDependency;\n"
"\n"
"// Set many cache values marking both with a tag.\n"
"$cache->getOrSet('item_42_price', $callable, null, new TagDependency('item_42'));\n"
"$cache->getOrSet('item_42_total', $callable, 3600, new TagDependency('item_42'));\n"
"\n"
"// Trigger invalidation by tag.\n"
"TagDependency::invalidate($cache, 'item_42');\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "Below is a summary of the available cache dependencies:"
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`\\Yiisoft\\Cache\\Dependency\\ValueDependency`: invalidates the cache when specified value changes."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`\\Yiisoft\\Cache\\Dependency\\CallbackDependency`: invalidates the cache when the result of the specified PHP callback is different."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`\\Yiisoft\\Cache\\Dependency\\FileDependency`: invalidates the cache when the file's last modification time is different."
msgstr ""

#. type: Bullet: '- '
#: ../../guide/en/caching/data.md
msgid "`\\Yiisoft\\Cache\\Dependency\\TagDependency`: associates a cached data item with one or many tags. You may invalidate the cached data items with the specified tag(s) by calling `TagDependency::invalidate()`."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "You may combine many dependencies using `\\Yiisoft\\Cache\\Dependency\\AnyDependency` or `\\Yiisoft\\Cache\\Dependency\\AllDependencies`."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "To implement your own dependency, extend from `\\Yiisoft\\Cache\\Dependency\\Dependency`."
msgstr ""

#. type: Title ###
#: ../../guide/en/caching/data.md
#, no-wrap
msgid "Cache stampede prevention"
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "[A cache stampede](https://en.wikipedia.org/wiki/Cache_stampede) is a type of cascading failure that can occur when massively parallel computing systems with caching mechanisms come under a high load.  This behavior is sometimes also called dog-piling."
msgstr ""

#. type: Plain text
#: ../../guide/en/caching/data.md
msgid "The `\\Yiisoft\\Cache\\Cache` uses a built-in \"Probably early expiration\" algorithm that prevents cache stampede.  This algorithm randomly fakes a cache miss for one user while others are still served the cached value.  You can control its behavior with the fifth optional parameter of `getOrSet()`, which is a float value called `$beta`.  By default, beta is `1.0`, which is usually enough.  The higher the value, the earlier cache will be re-created."
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/caching/data.md
#, no-wrap
msgid ""
"/**\n"
" * @var mixed $key\n"
" * @var callable $callable\n"
" * @var \\DateInterval $ttl\n"
" * @var \\Yiisoft\\Cache\\CacheInterface $cache\n"
" * @var \\Yiisoft\\Cache\\Dependency\\Dependency $dependency\n"
" */\n"
"\n"
"$beta = 2.0;\n"
"$cache->getOrSet($key, $callable, $ttl, $dependency, $beta);\n"
msgstr ""
