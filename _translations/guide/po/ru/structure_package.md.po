# Russian translations for PACKAGE package
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-09-04 11:19+0500\n"
"PO-Revision-Date: 2025-09-04 11:19+0500\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

#. type: Title #
#: en/structure/package.md
#, no-wrap
msgid "Packages"
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "Reusable code could be released as [a Composer package](https://getcomposer.org/doc/05-repositories.md#package).  It could be an infrastructure library, a module representing one of the application contexts or, basically, any reusable code."
msgstr ""

#. type: Title ##
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "Resolving aliases <span id=\"resolving-aliases\"></span>"
msgid "Using packages <span id=\"using-packages\"></span>"
msgstr "Разрешение псевдонимов <span id=\"resolving-aliases\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "By default, Composer installs packages registered on [Packagist](https://packagist.org/) — the biggest repository for open source PHP packages. You can look for packages on Packagist. You may also [create your own repository](https://getcomposer.org/doc/05-repositories.md#repository) and configure Composer to use it. This is useful if you're developing private packages that you want to share within your projects only."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "Packages installed by Composer are stored in the `vendor` directory of your project.  Because the Composer is a dependency manager, when it installs a package, it will also install all its dependent packages."
msgstr ""

#. type: Plain text
#: en/structure/package.md
#, no-wrap
msgid ""
"> [!WARNING]\n"
"> `vendor` directory of your application should never be modified.\n"
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "A package could be installed with the following command:"
msgstr ""

#. type: Fenced code block
#: en/structure/package.md
#, no-wrap
msgid "composer install vendor-name/package-name\n"
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "After it's done, Composer modifies `composer.json` and `composer.lock`. The former defines what packages to install, and their version constraints the latter stores a snapshot of exact versions actually installed."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "Classes from the package will be available immediately via [autoloading](../concept/autoloading.md)."
msgstr ""

#. type: Title ##
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "Resolving aliases <span id=\"resolving-aliases\"></span>"
msgid "Creating packages <span id=\"creating-packages\"></span>"
msgstr "Разрешение псевдонимов <span id=\"resolving-aliases\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "You may consider creating a package when you feel the need to share with other people your great code.  A package can contain any code you like, such as a helper class, a widget, a service, middleware, the whole module, etc."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "Below are the basic steps you may follow."
msgstr ""

#. type: Bullet: '1. '
#: en/structure/package.md
msgid "Create a project for your package and host it on a VCS repository, such as [GitHub.com](https://github.com).  The development and maintenance work for the package should be done on this repository."
msgstr ""

#. type: Bullet: '2. '
#: en/structure/package.md
msgid "Under the root directory of the project, create a file named `composer.json` as required by Composer. Please refer to the next subsection for more details."
msgstr ""

#. type: Bullet: '3. '
#: en/structure/package.md
msgid "Register your package with a Composer repository, such as [Packagist](https://packagist.org/), so that other users can find and install your package using Composer."
msgstr ""

#. type: Title ###
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "DI container <span id=\"di-container\"></span>"
msgid "`composer.json` <span id=\"composer-json\"></span>"
msgstr "Контейнер внедрения зависимостей <span id=\"di-container\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "Each Composer package must have a `composer.json` file in its root directory. The file contains the metadata about the package. You may find the complete specification about this file in the [Composer Manual](https://getcomposer.org/doc/01-basic-usage.md#composer-json-project-setup).  The following example shows the `composer.json` file for the `yiisoft/yii-widgets` package:"
msgstr ""

#. type: Fenced code block (json)
#: en/structure/package.md
#, no-wrap
msgid ""
"{\n"
"    \"name\": \"yiisoft/yii-widgets\",\n"
"    \"type\": \"library\",\n"
"    \"description\": \"Yii widgets collection\",\n"
"    \"keywords\": [\n"
"        \"yii\",\n"
"        \"widgets\"\n"
"    ],\n"
"    \"homepage\": \"https://www.yiiframework.com/\",\n"
"    \"license\": \"BSD-3-Clause\",\n"
"    \"support\": {\n"
"        \"issues\": \"https://github.com/yiisoft/yii-widgets/issues?state=open\",\n"
"        \"forum\": \"https://www.yiiframework.com/forum/\",\n"
"        \"wiki\": \"https://www.yiiframework.com/wiki/\",\n"
"        \"irc\": \"ircs://irc.libera.chat:6697/yii\",\n"
"        \"chat\": \"https://t.me/yii3en\",\n"
"        \"source\": \"https://github.com/yiisoft/yii-widgets\"\n"
"    },\n"
"    \"funding\": [\n"
"        {\n"
"            \"type\": \"opencollective\",\n"
"            \"url\": \"https://opencollective.com/yiisoft\"\n"
"        },\n"
"        {\n"
"            \"type\": \"github\",\n"
"            \"url\": \"https://github.com/sponsors/yiisoft\"\n"
"        }\n"
"    ],\n"
"    \"require\": {\n"
"        \"php\": \"^7.4|^8.0\",\n"
"        \"yiisoft/aliases\": \"^1.1|^2.0\",\n"
"        \"yiisoft/cache\": \"^1.0\",\n"
"        \"yiisoft/html\": \"^2.0\",\n"
"        \"yiisoft/view\": \"^4.0\",\n"
"        \"yiisoft/widget\": \"^1.0\"\n"
"    },\n"
"    \"require-dev\": {\n"
"        \"phpunit/phpunit\": \"^9.5\",\n"
"        \"roave/infection-static-analysis-plugin\": \"^1.16\",\n"
"        \"spatie/phpunit-watcher\": \"^1.23\",\n"
"        \"vimeo/psalm\": \"^4.18\",\n"
"        \"yiisoft/psr-dummy-provider\": \"^1.0\",\n"
"        \"yiisoft/test-support\": \"^1.3\"\n"
"    },\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"Yiisoft\\\\Yii\\\\Widgets\\\\\": \"src\"\n"
"        }\n"
"    },\n"
"    \"autoload-dev\": {\n"
"        \"psr-4\": {\n"
"            \"Yiisoft\\\\Yii\\\\Widgets\\\\Tests\\\\\": \"tests\"\n"
"        }\n"
"    },\n"
"    \"extra\": {\n"
"        \"branch-alias\": {\n"
"            \"dev-master\": \"3.0.x-dev\"\n"
"        }\n"
"    },\n"
"    \"scripts\": {\n"
"        \"test\": \"phpunit --testdox --no-interaction\",\n"
"        \"test-watch\": \"phpunit-watcher watch\"\n"
"    },\n"
"    \"config\": {\n"
"        \"sort-packages\": true,\n"
"        \"allow-plugins\": {\n"
"            \"infection/extension-installer\": true,\n"
"            \"composer/package-versions-deprecated\": true\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "DI container <span id=\"di-container\"></span>"
msgid "Package Name <span id=\"package-name\"></span>"
msgstr "Контейнер внедрения зависимостей <span id=\"di-container\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "Each Composer package should have a package name which uniquely identifies the package among all others.  The format of package names is `vendorName/projectName`. For example, in the package name `yiisoft/queue`, the vendor name, and the project name are `yiisoft` and `queue`, respectively."
msgstr ""

#. type: Plain text
#: en/structure/package.md
#, no-wrap
msgid ""
"> [!WARNING]\n"
"> Don't use `yiisoft` as your vendor name as it's reserved for use by the Yii itself.\n"
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "We recommend you prefix `yii-` to the project name for packages that aren't able to work as general PHP packages and require Yii application. This will allow users to more easily tell whether a package is Yii specific."
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "References <span id=\"references\"></span>"
msgid "Dependencies <span id=\"dependencies\"></span>"
msgstr "Полезные ссылки <span id=\"references\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "If your extension depends on other packages, you should list them in `require` section of `composer.json`.  Make sure you also list appropriate version constraints (e.g. `^1.0`, `@stable`) for each dependent package.  Use stable dependencies when your extension is released in a stable version."
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "DI container <span id=\"di-container\"></span>"
msgid "Class Autoloading <span id=\"class-autoloading\"></span>"
msgstr "Контейнер внедрения зависимостей <span id=\"di-container\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "In order for your classes to be autoloaded, you should specify the `autoload` entry in the `composer.json` file, like shown below:"
msgstr ""

#. type: Fenced code block (json)
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid ""
#| "{\n"
#| "    \"autoload\": {\n"
#| "        \"psr-4\": {\n"
#| "            \"App\\\\\": \"src/\"\n"
#| "        }\n"
#| "    }\n"
#| "}\n"
msgid ""
"{\n"
"    // ....\n"
"\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"MyVendorName\\\\MyPackageName\\\\\": \"src\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"{\n"
"    \"autoload\": {\n"
"        \"psr-4\": {\n"
"            \"App\\\\\": \"src/\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: en/structure/package.md
msgid "You may list one or multiple root namespaces and their corresponding file paths."
msgstr ""

#. type: Title ###
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "Predefined aliases <span id=\"predefined-aliases\"></span>"
msgid "Recommended Practices <span id=\"recommended-practices\"></span>"
msgstr "Предопределенные псевдонимы <span id=\"predefined-aliases\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "Because packages are meant to be used by other people, you often need to make an extra effort during development.  Below, we introduce some common and recommended practices in creating high-quality extensions."
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "Resolving aliases <span id=\"resolving-aliases\"></span>"
msgid "Testing <span id=\"testing\"></span>"
msgstr "Разрешение псевдонимов <span id=\"resolving-aliases\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "You want your package to run flawlessly without bringing problems to other people. To reach this goal, you should test your extension before releasing it to the public."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "It's recommended that you create various test cases to cover your extension code rather than relying on manual tests.  Each time before you release a new version of your package, you may run these test cases to make sure everything is in good shape. For more details, please refer to the [Testing](../testing/overview.md) section."
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "Defining aliases <span id=\"defining-aliases\"></span>"
msgid "Versioning <span id=\"versioning\"></span>"
msgstr "Определение псевдонимов <span id=\"defining-aliases\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "You should give each release of your extension a version number (e.g. `1.0.1`). We recommend you follow the [semantic versioning](https://semver.org) practice when determining what version numbers should be used."
msgstr ""

#. type: Title ####
#: en/structure/package.md
#, fuzzy, no-wrap
#| msgid "References <span id=\"references\"></span>"
msgid "Releasing <span id=\"releasing\"></span>"
msgstr "Полезные ссылки <span id=\"references\"></span>"

#. type: Plain text
#: en/structure/package.md
msgid "To let other people know about your package, you need to release it to the public."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "If it's the first time you're releasing a package, you should register it in a Composer repository, such as [Packagist](https://packagist.org/).  After that, all you need to do is create a release tag (for example, `v1.0.1`)  on the VCS repository of your extension and notify the Composer repository about the new release. People will then be able to find the new release and install or update the package through the Composer repository."
msgstr ""

#. type: Plain text
#: en/structure/package.md
msgid "In the release of your package, in addition to code files, you should also consider including the following to help other people learn about and use your extension:"
msgstr ""

#. type: Bullet: '* '
#: en/structure/package.md
msgid "A readme file in the package root directory: it describes what your extension does and how to install and use it.  We recommend you write it in [Markdown](https://daringfireball.net/projects/markdown/) format and name the file as `README.md`."
msgstr ""

#. type: Bullet: '* '
#: en/structure/package.md
msgid "A changelog file in the package root directory: it lists what changes are made in each release. The file may be written in Markdown format and named as `CHANGELOG.md`."
msgstr ""

#. type: Bullet: '* '
#: en/structure/package.md
msgid "An upgrade file in the package root directory: it gives the instructions on how to upgrade from older releases of the extension. The file may be written in Markdown format and named as `UPGRADE.md`."
msgstr ""

#. type: Bullet: '* '
#: en/structure/package.md
msgid "Tutorials, demos, screenshots, etc.: these are needed if your extension provides many features that can't be fully covered in the readme file."
msgstr ""

#. type: Bullet: '* '
#: en/structure/package.md
msgid "API documentation: your code should be well-documented to allow other people to more easily read and understand it."
msgstr ""
