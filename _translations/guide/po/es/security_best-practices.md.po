# Spanish translations for PACKAGE package
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-09-04 08:00+0500\n"
"PO-Revision-Date: 2025-09-04 08:00+0500\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. type: Title ##
#: en/concept/autoloading.md en/security/best-practices.md
#, no-wrap
msgid "References"
msgstr "Referencias"

#. type: Title #
#: en/security/best-practices.md
#, no-wrap
msgid "Security best practices"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Below, we'll review common security principles and describe how to avoid threats when developing applications using Yii.  Most of these principles aren't unique to Yii alone but apply to website or software development in general, so you will also find links for further reading on the general ideas behind these."
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Basic principles"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "There are two main principles when it comes to security no matter which application is being developed:"
msgstr ""

#. type: Bullet: '1. '
#: en/security/best-practices.md
msgid "Filter input."
msgstr ""

#. type: Bullet: '2. '
#: en/security/best-practices.md
msgid "Escape output."
msgstr ""

#. type: Title ###
#: en/security/best-practices.md
#, no-wrap
msgid "Filter input"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Filter input means that you should never consider input safe, and you should always check if the value you've got is actually among allowed ones.  For example, if you know that you sort by three fields `title`, `created_at` and `status` and the field came from user input, it's better to check the value you've got right where you're receiving it.  In terms of basic PHP, that would look like the following:"
msgstr ""

#. type: Fenced code block (php)
#: en/security/best-practices.md
#, no-wrap
msgid ""
"$sortBy = $_GET['sort'];\n"
"if (!in_array($sortBy, ['title', 'created_at', 'status'])) {\n"
"\tthrow new \\InvalidArgumentException('Invalid sort value.');\n"
"}\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "In Yii, most probably you'll use [form validation](../input/validation.md) to do similar checks."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Further reading on the topic:"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/vulnerabilities/Improper_Data_Validation>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html>"
msgstr ""

#. type: Title ###
#: en/security/best-practices.md
#, no-wrap
msgid "Escape output"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
#, no-wrap
msgid ""
"Escape output means that, depending on the context where you're using data,\n"
"you should prepend it with special characters to negate its special meaning.\n"
"In context of HTML you should escape `<`, `>` and alike special characters.\n"
"In the context of JavaScript or SQL, it will be a different set of characters.\n"
"Since it's error-prone to escape manually, Yii provides various tools to perform escaping in different contexts.\n"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/attacks/Command_Injection>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/attacks/Code_Injection>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/attacks/xss/>"
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding SQL injections"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "SQL injection happens when you form a query text by concatenating unescaped strings such as the following:"
msgstr ""

#. type: Fenced code block (php)
#: en/security/best-practices.md
#, no-wrap
msgid ""
"$username = $_GET['username'];\n"
"$sql = \"SELECT * FROM user WHERE username = '$username'\";\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Instead of supplying correct username attacker could give your applications something like `'; DROP TABLE user; --`.  The Resulting SQL will be the following:"
msgstr ""

#. type: Fenced code block (sql)
#: en/security/best-practices.md
#, no-wrap
msgid "SELECT * FROM user WHERE username = ''; DROP TABLE user; --'\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "This is a valid query that will search for users with empty username and then will drop `user` table most probably resulting in a broken website and data loss (you've set up regular backups, right?)."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Make sure to either use PDO prepared statements directly or ensure that the library you prefer is doing it.  In the case of prepared statements, it's impossible to manipulate the query as was demonstrated above."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "If you use data to specify column names or table names, the best thing to do is to allow only a predefined set of values:"
msgstr ""

#. type: Fenced code block (php)
#: en/security/best-practices.md
#, no-wrap
msgid ""
"function actionList($orderBy = null)\n"
"{\n"
"    if (!in_array($orderBy, ['name', 'status'])) {\n"
"        throw new \\InvalidArgumentException('Only name and status are allowed to order by.');\n"
"    }\n"
"    \n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/attacks/SQL_Injection>"
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding XSS"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
#, no-wrap
msgid ""
"XSS or cross-site scripting happens when output isn't escaped properly when outputting HTML to the browser. For example,\n"
"if user can enter his name and instead of `Alexander` he enters `<script>alert('Hello!');</script>`, every page that\n"
"outputs username without escaping it will execute JavaScript `alert('Hello!');` resulting in alert box popping up\n"
"in a browser. Depending on the website instead of innocent alert, such a script could send messages using your name or even\n"
"perform bank transactions.\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Avoiding XSS is quite easy in Yii. There are two cases:"
msgstr ""

#. type: Bullet: '1. '
#: en/security/best-practices.md
msgid "You want to output data as plain text."
msgstr ""

#. type: Bullet: '2. '
#: en/security/best-practices.md
msgid "You want to output data as HTML."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "If all you need is plain text, then escaping is as easy as the following:"
msgstr ""

#. type: Fenced code block (php)
#: en/security/best-practices.md
#, no-wrap
msgid "<?= \\Yiisoft\\Html\\Html::encode($username) ?>\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "If it should be HTML, you could get some help from [HtmlPurifier](http://htmlpurifier.org/).  Note that HtmlPurifier processing is quite heavy, so consider adding caching."
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding CSRF"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "CSRF is an abbreviation for cross-site request forgery. The idea is that many applications assume that requests coming from a user browser are made by the user themselves. This assumption could be false."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
#, no-wrap
msgid ""
"For example, the website `an.example.com` has a `/logout` URL that, when accessed using a simple GET request, logs the user out. As long\n"
"as it's requested by the user themselves everything is OK, but one day bad guys are somehow posting\n"
"`<img src=\"http://an.example.com/logout\">` on a forum the user often visits. The browser doesn't make any difference between\n"
"requesting an image or requesting a page so when the user opens a page with such a manipulated `<img>` tag,\n"
"the browser will send the GET request to that URL and the user will be logged out from `an.example.com`.\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
#, no-wrap
msgid ""
"That's the basic idea of how a CSRF attack works. One can say that logging out a user isn't a serious thing.\n"
"However, this was just an example.\n"
"There are many more things one could do using this approach.\n"
"For example, triggering payments or changing data. Imagine that some website has a URL\n"
"`http://an.example.com/purse/transfer?to=anotherUser&amount=2000`. Accessing it using GET request, causes transfer of $2000\n"
"from an authorized user account to user `anotherUser`.\n"
"You know that the browser will always send a GET request to load an image,\n"
"so you can change the code to accept only POST requests on that URL.\n"
"Unfortunately, this won't save you, because an attacker\n"
"can put some JavaScript code instead of `<img>` tag, which allows sending POST requests to that URL as well.\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "For this reason, Yii applies extra mechanisms to protect against CSRF attacks."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "To avoid CSRF, you should always:"
msgstr ""

#. type: Bullet: '1. '
#: en/security/best-practices.md
msgid "Follow HTTP specification. GET shouldn't change the application state.  See [RFC2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html) for more details."
msgstr ""

#. type: Bullet: '2. '
#: en/security/best-practices.md
msgid "Keep Yii CSRF protection enabled."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Yii has CSRF protection as `Yiisoft\\Yii\\Web\\Middleware\\Csrf` middleware.  Make sure it's in your application middleware stack."
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/attacks/csrf>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-community/SameSite>"
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding file exposure"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
#, no-wrap
msgid ""
"By default, server webroot is meant to be pointed to `public` directory where `index.php` is. In the case of shared hosting\n"
" environments, it could be impossible to achieve, so you'll end up with all the code, configs and logs in server webroot.\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "If so, remember to deny access to everything except `web`.  If it's impossible, consider hosting your application elsewhere."
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding debug info and tools in production"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "In debug mode, Yii shows quite verbose errors which are certainly helpful for development.  The thing is that these verbose errors are handy for attacker as well since these could reveal database structure, configuration values and parts of your code."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Never run production applications with debugger or Gii accessible to everyone.  One could use it to get information about database structure, code and to simply rewrite code with what's generated by Gii."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "You should avoid the debug toolbar in production unless necessary.  It exposes all the application and config details possible.  If you absolutely need it, check twice you restrict access to your IP only."
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-project-.net/articles/Exception_Handling.md>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "<https://owasp.org/www-pdf-archive/OWASP_Top_10_2007.pdf>"
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Using secure connection over TLS"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Yii provides features that rely on cookies and/or PHP sessions. These can be vulnerable in case your connection is compromised. The risk is reduced if the app uses secure connection via TLS (often referred to as [SSL](https://en.wikipedia.org/wiki/Transport_Layer_Security))."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Nowadays, anyone can get a certificate for free and automatically update it thanks to [Let's Encrypt](https://letsencrypt.org/)."
msgstr ""

#. type: Title ##
#: en/security/best-practices.md
#, no-wrap
msgid "Secure server configuration"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "The purpose of this section is to highlight risks that need to be considered when creating a server configuration for serving a Yii-based website. Besides the points covered here, there may be other security-related configuration options to be considered, so don't consider this section to be complete."
msgstr ""

#. type: Title ###
#: en/security/best-practices.md
#, no-wrap
msgid "Avoiding `Host`-header attacks"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "If the webserver is configured to serve the same site independent of the value of the `Host` header, this information mayn't be reliable and [may be faked by the user sending the HTTP request](https://www.acunetix.com/vulnerabilities/web/host-header-attack).  In such situations, you should fix your webserver configuration to serve the site only for specified host names."
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "For more information about the server configuration, please refer to the documentation of your webserver:"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "Apache 2: <https://httpd.apache.org/docs/trunk/vhosts/examples.html#defaultallports>"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "Nginx: <https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/>"
msgstr ""

#. type: Title ###
#: en/security/best-practices.md
#, no-wrap
msgid "Configuring SSL peer validation"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "There is a typical misconception about how to solve SSL certificate validation issues such as:"
msgstr ""

#. type: Fenced code block
#: en/security/best-practices.md
#, no-wrap
msgid "cURL error 60: SSL certificate problem: unable to get local issuer certificate\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "or"
msgstr ""

#. type: Fenced code block
#: en/security/best-practices.md
#, no-wrap
msgid "stream_socket_enable_crypto(): SSL operation failed with code 1. OpenSSL Error messages: error:1416F086:SSL routines:tls_process_server_certificate:certificate verify failed\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Many sources wrongly suggest disabling SSL peer verification.  That shouldn't be ever done since it enables man-in-the middle type of attacks.  Instead, PHP should be configured properly:"
msgstr ""

#. type: Bullet: '1. '
#: en/security/best-practices.md
msgid "Download [https://curl.haxx.se/ca/cacert.pem](https://curl.haxx.se/ca/cacert.pem)."
msgstr ""

#. type: Bullet: '2. '
#: en/security/best-practices.md
msgid "Add the following to your php.ini:"
msgstr ""

#. type: Fenced code block
#: en/security/best-practices.md
#, no-wrap
msgid ""
"  openssl.cafile=\"/path/to/cacert.pem\"\n"
"  curl.cainfo=\"/path/to/cacert.pem\".\n"
msgstr ""

#. type: Plain text
#: en/security/best-practices.md
msgid "Note that you should keep the file up to date."
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "[OWASP top 10](https://owasp.org/Top10/)"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "[The Basics of Web Application Security](https://martinfowler.com/articles/web-security-basics.html) by Martin Fowler"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "[PHP manual: security](https://www.php.net/manual/en/security.php)"
msgstr ""

#. type: Bullet: '- '
#: en/security/best-practices.md
msgid "[Information security at STackExchange](https://security.stackexchange.com/)"
msgstr ""
