# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-09-11 10:15+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ##
#: ../../guide/en/tutorial/using-yii-with-roadrunner.md
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "Installation"
msgstr ""

#. type: Title ##
#: ../../guide/en/tutorial/using-yii-with-roadrunner.md
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "Starting a server"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-roadrunner.md
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid "To start a server, execute the following command:"
msgstr ""

#. type: Title #
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "Using Yii with Swoole"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid ""
"[Swoole](https://www.swoole.co.uk/) is a PHP network framework distributed as a PECL extension. It allows you built-in async,\n"
"multiple threads I/O modules. Developers can use sync or async, coroutine API to write the applications.\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid ""
"In the context of Yii, it allows running request handlers as workers. Each "
"worker may handle multiple requests.  Such an operation mode is often called "
"[event loop](using-with-event-loop.md) and allows not re-initializing a "
"framework for each request that improves performance significantly."
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid "Swoole works on Linux and macOS and can be installed via pecl:"
msgstr ""

#. type: Fenced code block (bash)
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "pecl install swoole\n"
msgstr ""

#. type: Title ##
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "Putting up a server"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid ""
"Since Swoole doesn't have built-in PSR-7 support, you need a package fixing "
"so:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "composer require ilexn/swoole-convent-psr7\n"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid "Create an entry script, `server.php`:"
msgstr ""

#. type: Fenced code block (php)
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid ""
"<?php\n"
"\n"
"declare(strict_types=1);\n"
"\n"
"use Psr\\Http\\Message\\ServerRequestFactoryInterface;\n"
"use Psr\\Http\\Message\\StreamFactoryInterface;\n"
"use Psr\\Http\\Message\\UploadedFileFactoryInterface;\n"
"use Psr\\Http\\Message\\UriFactoryInterface;\n"
"use Yiisoft\\Di\\Container;\n"
"use Yiisoft\\Di\\ContainerConfig;\n"
"use Yiisoft\\Yii\\Web\\Application;\n"
"use Yiisoft\\Config\\Config;\n"
"\n"
"ini_set('display_errors', 'stderr');\n"
"\n"
"define('YII_ENV', getenv('env') ?: 'production');\n"
"require_once dirname(__DIR__) . '/vendor/autoload.php';\n"
"\n"
"$config = new Config(\n"
"    dirname(__DIR__),\n"
"    '/config/packages',\n"
"    null,\n"
"    [\n"
"        'params',\n"
"        'events',\n"
"        'events-web',\n"
"        'events-console',\n"
"    ]\n"
");\n"
"\n"
"$containerConfig = ContainerConfig::create()\n"
"    ->withDefinitions($config->get('web'))\n"
"    ->withProviders($config->get('providers-web'));\n"
"$container = new Container($containerConfig);\n"
"\n"
"$bootstrapList = $config->get('bootstrap-web');\n"
"foreach ($bootstrapList as $callback) {\n"
"    if (!(is_callable($callback))) {\n"
"        $type = is_object($callback) ? get_class($callback) : gettype($callback);\n"
"\n"
"        throw new \\RuntimeException(\"Bootstrap callback must be callable, $type given.\");\n"
"    }\n"
"    $callback($container);\n"
"}\n"
"\n"
"$application = $container->get(Application::class);\n"
"\n"
"$serverRequestFactory = new \\Ilex\\SwoolePsr7\\SwooleServerRequestConverter(\n"
"    $container->get(ServerRequestFactoryInterface::class),\n"
"    $container->get(UriFactoryInterface::class),\n"
"    $container->get(UploadedFileFactoryInterface::class),\n"
"    $container->get(StreamFactoryInterface::class)\n"
");\n"
"\n"
"$server = new Swoole\\HTTP\\Server('0.0.0.0', 9501);\n"
"\n"
"$server->on('start', static function (Swoole\\Http\\Server $server) use ($application) {\n"
"    $application->start();\n"
"    echo \"Swoole http server is started at http://127.0.0.1:9501\\n\";\n"
"});\n"
"\n"
"$server->on('request', static function (Swoole\\Http\\Request $request, Swoole\\Http\\Response $response) use ($serverRequestFactory, $application, $container) {\n"
"    $psr7Response = null;\n"
"    try {\n"
"        $requestContainer = clone $container;\n"
"        $psr7Request = $serverRequestFactory->createFromSwoole($request);\n"
"        $psr7Response = $application->handle($psr7Request);\n"
"    \n"
"        $converter = new \\Ilex\\SwoolePsr7\\SwooleResponseConverter($response);\n"
"        $converter->send($psr7Response);\n"
"    } catch (\\Throwable $t) {\n"
"        // TODO: render it properly\n"
"        $response->end($t->getMessage());\n"
"    } finally {\n"
"        $application->afterEmit($psr7Response ?? null);\n"
"        $container->get(\\Yiisoft\\Di\\StateResetter::class)->reset();\n"
"        $container = $requestContainer;    \n"
"    }\n"
"});\n"
"\n"
"$server->on('shutdown', static function (Swoole\\Http\\Server $server) use ($application) {\n"
"    $application->shutdown();\n"
"});\n"
"\n"
"$server->start();\n"
msgstr ""

#. type: Fenced code block
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "php server.php\n"
msgstr ""

#. type: Title ##
#: ../../guide/en/tutorial/using-yii-with-swoole.md
#, no-wrap
msgid "On scope"
msgstr ""

#. type: Plain text
#: ../../guide/en/tutorial/using-yii-with-swoole.md
msgid ""
"A scope is shared, so at each iteration of the event loop every service that "
"depends on state should be reset."
msgstr ""
